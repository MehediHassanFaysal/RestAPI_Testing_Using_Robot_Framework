<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.10.5 on win32)" generated="20221222 15:40:32.501" rpa="false" schemaversion="3">
<suite id="s1" name="RestAPIAutomation with RobotFramework" source="J:\SQA Concepts\Rest API Testing Using Robot Framework in Python\Git\RestAPIAutomation_with_RobotFramework">
<suite id="s1-s1" name="Video Game DB - Test Application" source="J:\SQA Concepts\Rest API Testing Using Robot Framework in Python\Git\RestAPIAutomation_with_RobotFramework\Video Game DB - Test Application">
<suite id="s1-s1-s1" name="TestCases" source="J:\SQA Concepts\Rest API Testing Using Robot Framework in Python\Git\RestAPIAutomation_with_RobotFramework\Video Game DB - Test Application\TestCases">
<suite id="s1-s1-s1-s1" name="VideoGameTC" source="J:\SQA Concepts\Rest API Testing Using Robot Framework in Python\Git\RestAPIAutomation_with_RobotFramework\Video Game DB - Test Application\TestCases\VideoGameTC.robot">
<test id="s1-s1-s1-s1-t1" name="TC1: Returns all the videos games in the DB (GET)" line="13">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221222 15:40:32.784" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221222 15:40:32.784" endtime="20221222 15:40:32.784"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${relative_uri}</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20221222 15:40:32.784" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20221222 15:40:33.748" level="INFO">GET Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221222 15:40:33.748" level="INFO">GET Response : url=http://localhost:8080/app/videogames 
 status=500, reason= 
 headers={'Content-Type': 'application/xml;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 22 Dec 2022 09:40:33 GMT', 'Connection': 'close'} 
 body=&lt;Map&gt;&lt;timestamp&gt;1671702033588&lt;/timestamp&gt;&lt;status&gt;500&lt;/status&gt;&lt;error&gt;Internal Server Error&lt;/error&gt;&lt;message&gt;Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&lt;/message&gt;&lt;trace&gt;java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:311)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:97)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector.prepare(AccessorInjector.java:87)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory.get(OptimizedAccessorFactory.java:125)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection.optimize(Accessor.java:402)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.&amp;lt;init&gt;(TransducedAccessor.java:235)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor.get(TransducedAccessor.java:175)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.AttributeProperty.&amp;lt;init&gt;(AttributeProperty.java:91)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.PropertyFactory.create(PropertyFactory.java:108)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.&amp;lt;init&gt;(ClassBeanInfoImpl.java:181)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getOrCreate(JAXBContextImpl.java:514)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:331)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:139)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1156)&amp;#xd;
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:165)&amp;#xd;
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)&amp;#xd;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#xd;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:297)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:286)&amp;#xd;
	at javax.xml.bind.ContextFinder.find(ContextFinder.java:409)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:721)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:662)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getStoredJaxbContext(AbstractJaxbProvider.java:312)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getJAXBContext(AbstractJaxbProvider.java:297)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:264)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:231)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractCollectionJaxbProvider.writeTo(AbstractCollectionJaxbProvider.java:267)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:266)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:251)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:109)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:85)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1135)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:662)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:395)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:385)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:280)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:272)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:316)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:298)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:289)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:256)&amp;#xd;
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:703)&amp;#xd;
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:416)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:409)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:584)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:525)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:462)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)&amp;#xd;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)&amp;#xd;
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)&amp;#xd;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)&amp;#xd;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)&amp;#xd;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)&amp;#xd;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)&amp;#xd;
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)&amp;#xd;
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&amp;#xd;
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)&amp;#xd;
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)&amp;#xd;
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)&amp;#xd;
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&amp;#xd;
	at java.base/java.lang.Thread.run(Thread.java:833)&amp;#xd;
&lt;/trace&gt;&lt;path&gt;/app/videogames&lt;/path&gt;&lt;/Map&gt; 
 </msg>
<msg timestamp="20221222 15:40:33.748" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20221222 15:40:32.784" endtime="20221222 15:40:33.748"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221222 15:40:33.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221222 15:40:33.748" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20221222 15:40:33.748" endtime="20221222 15:40:33.748"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20221222 15:40:33.748" endtime="20221222 15:40:33.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml;charset=UTF-8</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.761"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml;charset=UTF-8</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.761"/>
</kw>
<status status="FAIL" starttime="20221222 15:40:32.784" endtime="20221222 15:40:33.761">500 != 200</status>
</test>
<test id="s1-s1-s1-s1-t2" name="TC2: Add a new video game to the DB (POST)" line="27">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221222 15:40:33.761" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.761"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>id=${param}</arg>
<arg>name=Faysal</arg>
<arg>releaseDate=2022-12-22T07:35:37.466Z</arg>
<arg>reviewScore=100</arg>
<arg>category=Action</arg>
<arg>rating=*****</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221222 15:40:33.761" level="INFO">${body} = {'id': '201', 'name': 'Faysal', 'releaseDate': '2022-12-22T07:35:37.466Z', 'reviewScore': '100', 'category': 'Action', 'rating': '*****'}</msg>
<status status="PASS" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.761"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${contentType}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221222 15:40:33.761" level="INFO">${contentType} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.761"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${relative_uri}</arg>
<arg>data=${body}</arg>
<arg>headers=${contentType}</arg>
<doc>*DEPRECATED* Please use `POST On Session` instead.</doc>
<msg timestamp="20221222 15:40:33.761" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20221222 15:40:33.856" level="INFO">POST Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '137'} 
 body={"id": "201", "name": "Faysal", "releaseDate": "2022-12-22T07:35:37.466Z", "reviewScore": "100", "category": "Action", "rating": "*****"} 
 </msg>
<msg timestamp="20221222 15:40:33.878" level="INFO">POST Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '39', 'Date': 'Thu, 22 Dec 2022 09:40:33 GMT'} 
 body={"status": "Record Added Successfully"} 
 </msg>
<msg timestamp="20221222 15:40:33.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221222 15:40:33.879" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20221222 15:40:33.878" endtime="20221222 15:40:33.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221222 15:40:33.879" endtime="20221222 15:40:33.880"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20221222 15:40:33.880" level="INFO">${contentType} = application/xml</msg>
<status status="PASS" starttime="20221222 15:40:33.880" endtime="20221222 15:40:33.880"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20221222 15:40:33.881" endtime="20221222 15:40:33.881"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221222 15:40:33.882" level="INFO">${status} = {"status": "Record Added Successfully"}</msg>
<status status="PASS" starttime="20221222 15:40:33.881" endtime="20221222 15:40:33.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status}</arg>
<arg>Record Added Successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221222 15:40:33.882" endtime="20221222 15:40:33.882"/>
</kw>
<status status="PASS" starttime="20221222 15:40:33.761" endtime="20221222 15:40:33.882"/>
</test>
<test id="s1-s1-s1-s1-t3" name="TC3: Returns the details of a single game by ID (GET)" line="44">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221222 15:40:33.882" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221222 15:40:33.882" endtime="20221222 15:40:33.882"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${relative_uri}/${param}</arg>
<doc>*DEPRECATED* Please use `GET On Session` instead.</doc>
<msg timestamp="20221222 15:40:33.882" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20221222 15:40:34.833" level="INFO">GET Request : url=http://localhost:8080/app/videogames/201 
 path_url=/app/videogames/201 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221222 15:40:34.833" level="INFO">GET Response : url=http://localhost:8080/app/videogames/201 
 status=500, reason= 
 headers={'Content-Type': 'application/xml;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 22 Dec 2022 09:40:34 GMT', 'Connection': 'close'} 
 body=&lt;Map&gt;&lt;timestamp&gt;1671702034785&lt;/timestamp&gt;&lt;status&gt;500&lt;/status&gt;&lt;error&gt;Internal Server Error&lt;/error&gt;&lt;message&gt;Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&lt;/message&gt;&lt;trace&gt;java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:311)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:97)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector.prepare(AccessorInjector.java:87)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory.get(OptimizedAccessorFactory.java:125)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection.optimize(Accessor.java:402)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.&amp;lt;init&gt;(TransducedAccessor.java:235)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor.get(TransducedAccessor.java:175)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.AttributeProperty.&amp;lt;init&gt;(AttributeProperty.java:91)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.PropertyFactory.create(PropertyFactory.java:108)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.&amp;lt;init&gt;(ClassBeanInfoImpl.java:181)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getOrCreate(JAXBContextImpl.java:514)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:331)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:139)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1156)&amp;#xd;
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:165)&amp;#xd;
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)&amp;#xd;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#xd;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:297)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:286)&amp;#xd;
	at javax.xml.bind.ContextFinder.find(ContextFinder.java:409)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:721)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:662)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getStoredJaxbContext(AbstractJaxbProvider.java:312)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getJAXBContext(AbstractJaxbProvider.java:297)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:264)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:231)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractRootElementJaxbProvider.writeTo(AbstractRootElementJaxbProvider.java:175)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:266)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:251)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:109)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:85)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1135)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:662)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:395)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:385)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:280)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:272)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:316)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:298)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:289)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:256)&amp;#xd;
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:703)&amp;#xd;
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:416)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:409)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:584)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:525)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:462)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)&amp;#xd;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)&amp;#xd;
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)&amp;#xd;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)&amp;#xd;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)&amp;#xd;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)&amp;#xd;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)&amp;#xd;
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)&amp;#xd;
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&amp;#xd;
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)&amp;#xd;
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)&amp;#xd;
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)&amp;#xd;
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&amp;#xd;
	at java.base/java.lang.Thread.run(Thread.java:833)&amp;#xd;
&lt;/trace&gt;&lt;path&gt;/app/videogames/201&lt;/path&gt;&lt;/Map&gt; 
 </msg>
<msg timestamp="20221222 15:40:34.833" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20221222 15:40:33.882" endtime="20221222 15:40:34.833"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20221222 15:40:34.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221222 15:40:34.848" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20221222 15:40:34.833" endtime="20221222 15:40:34.848"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml;charset=UTF-8</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml;charset=UTF-8</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<status status="FAIL" starttime="20221222 15:40:33.882" endtime="20221222 15:40:34.850">500 != 200</status>
</test>
<test id="s1-s1-s1-s1-t4" name="TC4: Update an existing video game in the DB by specifying a new body (PUT)" line="57">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221222 15:40:34.850" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${body}</var>
<arg>id=${param}</arg>
<arg>name=Faysal Sarder</arg>
<arg>releaseDate=2022-12-22T07:35:37.466Z</arg>
<arg>reviewScore=100</arg>
<arg>category=Action</arg>
<arg>rating=5 STAR</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221222 15:40:34.850" level="INFO">${body} = {'id': '201', 'name': 'Faysal Sarder', 'releaseDate': '2022-12-22T07:35:37.466Z', 'reviewScore': '100', 'category': 'Action', 'rating': '5 STAR'}</msg>
<status status="PASS" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${contentType}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221222 15:40:34.850" level="INFO">${contentType} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20221222 15:40:34.850" endtime="20221222 15:40:34.850"/>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${relative_uri}/${param}</arg>
<arg>data=${body}</arg>
<arg>headers=${contentType}</arg>
<doc>*DEPRECATED* Please use `PUT On Session` instead.</doc>
<msg timestamp="20221222 15:40:34.850" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20221222 15:40:35.438" level="INFO">PUT Request : url=http://localhost:8080/app/videogames/201 
 path_url=/app/videogames/201 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '145'} 
 body={"id": "201", "name": "Faysal Sarder", "releaseDate": "2022-12-22T07:35:37.466Z", "reviewScore": "100", "category": "Action", "rating": "5 STAR"} 
 </msg>
<msg timestamp="20221222 15:40:35.438" level="INFO">PUT Response : url=http://localhost:8080/app/videogames/201 
 status=500, reason= 
 headers={'Content-Type': 'application/xml;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 22 Dec 2022 09:40:34 GMT', 'Connection': 'close'} 
 body=&lt;Map&gt;&lt;timestamp&gt;1671702035311&lt;/timestamp&gt;&lt;status&gt;500&lt;/status&gt;&lt;error&gt;Internal Server Error&lt;/error&gt;&lt;message&gt;Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&lt;/message&gt;&lt;trace&gt;java.lang.NullPointerException: Cannot invoke "java.lang.reflect.Method.invoke(Object, Object[])" because "com.sun.xml.bind.v2.runtime.reflect.opt.Injector.defineClass" is null&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:311)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.Injector.inject(Injector.java:97)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.AccessorInjector.prepare(AccessorInjector.java:87)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedAccessorFactory.get(OptimizedAccessorFactory.java:125)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection.optimize(Accessor.java:402)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl.&amp;lt;init&gt;(TransducedAccessor.java:235)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor.get(TransducedAccessor.java:175)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.AttributeProperty.&amp;lt;init&gt;(AttributeProperty.java:91)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.property.PropertyFactory.create(PropertyFactory.java:108)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.&amp;lt;init&gt;(ClassBeanInfoImpl.java:181)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getOrCreate(JAXBContextImpl.java:514)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:331)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&amp;lt;init&gt;(JAXBContextImpl.java:139)&amp;#xd;
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1156)&amp;#xd;
	at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:165)&amp;#xd;
	at jdk.internal.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)&amp;#xd;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&amp;#xd;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:297)&amp;#xd;
	at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:286)&amp;#xd;
	at javax.xml.bind.ContextFinder.find(ContextFinder.java:409)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:721)&amp;#xd;
	at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:662)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getStoredJaxbContext(AbstractJaxbProvider.java:312)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getJAXBContext(AbstractJaxbProvider.java:297)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:264)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractJaxbProvider.getMarshaller(AbstractJaxbProvider.java:231)&amp;#xd;
	at org.glassfish.jersey.jaxb.internal.AbstractRootElementJaxbProvider.writeTo(AbstractRootElementJaxbProvider.java:175)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:266)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:251)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:109)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:85)&amp;#xd;
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:163)&amp;#xd;
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1135)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:662)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:395)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:385)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:280)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:272)&amp;#xd;
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:316)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:298)&amp;#xd;
	at org.glassfish.jersey.internal.Errors.process(Errors.java:268)&amp;#xd;
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:289)&amp;#xd;
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:256)&amp;#xd;
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:703)&amp;#xd;
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:416)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:409)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:584)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:525)&amp;#xd;
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:462)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)&amp;#xd;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)&amp;#xd;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)&amp;#xd;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)&amp;#xd;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)&amp;#xd;
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)&amp;#xd;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)&amp;#xd;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)&amp;#xd;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)&amp;#xd;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)&amp;#xd;
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)&amp;#xd;
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&amp;#xd;
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)&amp;#xd;
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)&amp;#xd;
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)&amp;#xd;
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)&amp;#xd;
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&amp;#xd;
	at java.base/java.lang.Thread.run(Thread.java:833)&amp;#xd;
&lt;/trace&gt;&lt;path&gt;/app/videogames/201&lt;/path&gt;&lt;/Map&gt; 
 </msg>
<msg timestamp="20221222 15:40:35.452" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20221222 15:40:34.850" endtime="20221222 15:40:35.452"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221222 15:40:35.452" level="INFO">${status_code} = 500</msg>
<status status="PASS" starttime="20221222 15:40:35.452" endtime="20221222 15:40:35.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20221222 15:40:35.454" level="FAIL">500 != 200</msg>
<status status="FAIL" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/xml</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${res_body}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${res_body}</arg>
<arg>Faysal Sarder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${json_object}</var>
<arg>${response.content}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20221222 15:40:35.454" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${user_name}</var>
<arg>${json_object}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Convert To List" library="Collections">
<var>${user_Nm}</var>
<arg>${user_name}</arg>
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${user_name}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${user_name}</arg>
<arg>${user_Nm}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<status status="FAIL" starttime="20221222 15:40:34.850" endtime="20221222 15:40:35.454">500 != 200</status>
</test>
<test id="s1-s1-s1-s1-t5" name="TC5: Deletes a video game from the DB by ID (DELETE)" line="83">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20221222 15:40:35.454" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.454"/>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${relative_uri}/${param}</arg>
<doc>*DEPRECATED* Please use `DELETE On Session` instead.</doc>
<msg timestamp="20221222 15:40:35.454" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
<msg timestamp="20221222 15:40:35.917" level="INFO">DELETE Request : url=http://localhost:8080/app/videogames/201 
 path_url=/app/videogames/201 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20221222 15:40:35.917" level="INFO">DELETE Response : url=http://localhost:8080/app/videogames/201 
 status=200, reason= 
 headers={'Content-Type': 'application/xml', 'Content-Length': '41', 'Date': 'Thu, 22 Dec 2022 09:40:35 GMT'} 
 body={"status": "Record Deleted Successfully"} 
 </msg>
<msg timestamp="20221222 15:40:35.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.917"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221222 15:40:35.917" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20221222 15:40:35.917" endtime="20221222 15:40:35.917"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221222 15:40:35.917" endtime="20221222 15:40:35.917"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${res_body}</var>
<arg>${response.content}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20221222 15:40:35.917" level="INFO">${res_body} = {"status": "Record Deleted Successfully"}</msg>
<status status="PASS" starttime="20221222 15:40:35.917" endtime="20221222 15:40:35.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${res_body}</arg>
<arg>Record Deleted Successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20221222 15:40:35.917" endtime="20221222 15:40:35.917"/>
</kw>
<status status="PASS" starttime="20221222 15:40:35.454" endtime="20221222 15:40:35.917"/>
</test>
<status status="FAIL" starttime="20221222 15:40:32.533" endtime="20221222 15:40:35.917"/>
</suite>
<status status="FAIL" starttime="20221222 15:40:32.533" endtime="20221222 15:40:35.917"/>
</suite>
<status status="FAIL" starttime="20221222 15:40:32.517" endtime="20221222 15:40:35.917"/>
</suite>
<status status="FAIL" starttime="20221222 15:40:32.501" endtime="20221222 15:40:35.917"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="3" skip="0" id="s1" name="RestAPIAutomation with RobotFramework">RestAPIAutomation with RobotFramework</stat>
<stat pass="2" fail="3" skip="0" id="s1-s1" name="Video Game DB - Test Application">RestAPIAutomation with RobotFramework.Video Game DB - Test Application</stat>
<stat pass="2" fail="3" skip="0" id="s1-s1-s1" name="TestCases">RestAPIAutomation with RobotFramework.Video Game DB - Test Application.TestCases</stat>
<stat pass="2" fail="3" skip="0" id="s1-s1-s1-s1" name="VideoGameTC">RestAPIAutomation with RobotFramework.Video Game DB - Test Application.TestCases.VideoGameTC</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20221222 15:40:32.784" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20221222 15:40:33.761" level="WARN">Keyword 'RequestsLibrary.Post Request' is deprecated. Please use `POST On Session` instead.</msg>
<msg timestamp="20221222 15:40:33.882" level="WARN">Keyword 'RequestsLibrary.Get Request' is deprecated. Please use `GET On Session` instead.</msg>
<msg timestamp="20221222 15:40:34.850" level="WARN">Keyword 'RequestsLibrary.Put Request' is deprecated. Please use `PUT On Session` instead.</msg>
<msg timestamp="20221222 15:40:35.454" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20221222 15:40:35.454" level="WARN">Keyword 'RequestsLibrary.Delete Request' is deprecated. Please use `DELETE On Session` instead.</msg>
</errors>
</robot>
